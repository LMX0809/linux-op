2017/2/24  知识点汇总
sda3
hdb5
sdc1


legacy
basic input output system  bios  cmos
secure boot 
efi-->uefi  guid 
Unified Extensible Firmware Interface

x11 窗口图形化协议  xfce（轻量级）kde（定制性最高）  gnome2（使用人数最多的，稳定性最好） unity（ubuntu自带的）  

默认快捷键  ctrl alt t  打开终端
ctrl shift  t  一个窗口多个终端
ctrl shift f1-f7  
ctrl c  终止当前命令
ctrl l 清屏
shift  pgup|pgdn    在终端下翻屏
终端终结者  terminator  

挂载点  /

记住这个概念：在linux中，一切皆文件

bin：  构建系统所需要的最少的指令（常用指令）

boot：  linux（内核）和虚拟文件系统以及操作系统启动所需要的文件

dev：各种设备文件

etc：系统软件和其他软件的配置文件所在路径

home：系统中普通用户的家目录

root：root用户的家目录

lib：库文件存放的路径
lib64：64位库文件存放的路径

media： 挂载目录
msic：挂载目录
mnt：挂载目录

net：和网络有关的文件

opt/usr  可以选择的应用安装目录或者第三方软件安装的路径

proc：进程映像的映射（不占用硬盘资源）

sbin：和系统操作相关的指令

selinux：基于安全的一套策略

tmp：类似于windows的temp（临时文件），其实就是内存中的一些文件的映射

var：所有的应用的数据存放此处，比如日志等。通常大型的服务都会专门为这个目录挂载专用的存储设备

[root@localhost ~]# 
[用户名@主机名 当前所在的目录]#
注：如果提示符是#结尾，表示这个用户是root，如果是$,说明是普通用户

指令 -选项   参数
ls  -help   表示分别由选项h、e、l、p结合
ls  --help 两个-表示后面的选项就是一个单词，这个单词就是选项
ls  -a 表示查看所有文件，在linux系统中，隐藏文件的文件名以.开头

2017/02/26
pgup|pgdn  查看文档一屏一屏
enter   查看文档一行一行
ctrl d  退出终端
alias ls=‘xxx’   自定义指令
man 1 ls   查看ls的帮助文档
whatis ls   查看ls的描述
which  ls   查看ls的来历
rm  -f 等同于  rm --force
在手册中查看内容时可以通过/关键词 来检索重要内容，按n是将检索到的关键词从上往下查看，按shift+n是从下往上，按q退出manual page

Centos6 的启动流程：
1、POST poweron secure test
cmos软件 bios固件
2、BOOT 
3、识别MBR 512B  
446（引导加载器）：GRUB LILO
64  分区表（每个分区占用16B）
2 magic number魔数
4、读取stage1 
stage1_5 识别各种文件系统
stage2  出现的就是grub界面
5、读取grub.conf 这个文件决定了grub界面的所有内容
6、根据grub.conf的配置读取内核和虚拟文件系统
7、启动init 父进程(PID 1)   /sbin/init   
8、读取配置文件/etc/inittab(选择进入系统的类型 runlevel)
#   0 - halt (Do NOT set initdefault to this)
#   1 - Single user mode  单用户模式
#   2 - Multiuser, without NFS (The same as 3, if you do not have networking)  多用户模式
#   3 - Full multiuser mode 没有图形化的，只能用终端
#   4 - unused
#   5 - X11  图形化
#   6 - reboot (Do NOT set initdefault to this)
9、根据inittab中定义的启动级别，去相应的目录启动需要的脚本。比如是0级别，就去/etc/rc0.d目录下启动所有脚本
同时需要执行fstab和rc.local
注：fstab是系统自动挂载需要的配置

sysV init 启动过程中的故障修复
1、root密码的破解
按e修改内容init 1 或 single 或 s
按b引导内核进入单用户模式
passwd   

2、内核升级失败的修复
/boot/vmlinuz***  内核
/boot/initrd***   虚拟文件系统
chroot  /mnt/sysimage  将光盘中的这个路径切换为/
mount /dev/cdrom /mnt  挂载光盘到当前的mnt目录中，这个mnt是硬盘中的mnt目录
rpm -ivh  参数i表示安装 --force
rpm -ivh --force  kernel-2.****.rpm

3、mbr分区中的grub修复（先linux，后window）
进入救援模式，chroot /mnt/sysimage
grub-install /dev/sda 


4、boot的修复，救援模式（应把grub.conf作一下备份最为省时间）
先chroot /mnt/sysimage
mount /dev/sr0 /mnt
先打上内核，在打内核时候，会自动打上虚拟文件系统。
再打上grub（cen7 会自动放置grub.conf）  grub-install /dev/sda（不能sda1,sda1为boot分区，不是mbr）
把grub.conf放置到/boot/grub/中。
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>7
grub加密
grub-md5-crypt  
添加到grub.conf中title 后跟 password (--md5）*****************    加了md5  就是md5加密   不加 就是明文

rhel7启动
default.target ->graphical.target=  rc5.d    图形化
systemctl set-default ************ 设置默认的启动级别  重启后生效
systemvtl isolate ***********(可以直接跳进该等级)
修改grub.cfg来决定系统的启动顺序/etc/default/grub grub2-mkconfig -o /boot/grub2/grub.cfg 更新
systemd 使用target来控制系统服务的启动
rhel6中使用runlevel，7中用target替代
第一个启动的通常都是default.target
对比两个系统的启动级别
0              poweroff.target 
1              resuce.target 
2              multi-user.target 
3
4
5              graphical.target    
6

 systemctl set-default multi-user.target    设置默认启动服务，下次启动生效
 
 systemd-analyze time  查看启动时间 
 systemctl isolate graphical.target  切换进入其他级别  
 systemctl list-units  查看系统中存在的服务
 systemctl list-units --type=service 查看后缀service的服务
 /usr/lib/systemd/system target路径
 /etc/systemd/system/default.target  主配置文件
 132  systemctl is-active sshd.service 
 查看服务是否启动
  133  systemctl stop sshd.service 
  关闭服务
  136  ps -aux |grep sshd   查看sshd进程
  137  systemctl start sshd.service
  启动进程
  
service sshd stop
修改grub.cfg来决定系统的启动顺序等需要修改/etc/default/grub,然后使用命令grub2-mkconfig -o  /boot/grub2/来更新grub.cfg的配置，如果是debain类的系统中使用update-grub2来更新
[root@localhost grub.d]# grub2-set-default 1
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>3.5>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
rescue 模式 单用户模式   需要密码
emergency 模式

破解root密码第一种  init=/bin/sh  
crtl+x 引导进入
进入后sh2.4#  此时输入passwd是无法修改成功的
sh2.4#  mount -o  remount，rw /
mount是挂载，参数-o是额外的选项，选项就是remount（重新挂载），rw表示权限
sh2.4#  passwd 修改密码，成功
sh2.4#  touch /.autorelabel 
创建这个文件的目的是为了让selinux自动打标签
sh2.4#  exec /sbin/init

root密码的破解
init=/bin/sh（7.3不推荐）ctrl+x引导
进入sh2.4#，此时修改passwd是无法成功
mount -o remount, rw /   
再次执行passwd （selinux会干扰）
touch /.autorelabel  创建这个文件的目的是为了让selinux自动打标签 
exec /sbin/init 

内核后rd.break (推荐）UTF_8可以删掉，免得不支持中文出现白色方块
mount -o remount, rw /sysroot/   重新挂载并要求sysroot可以读写
chroot /sysroot/ 切换根
passwd 
load_policy -i 加载selinux
chcon -t shadow_t /etc/shadow 修改shadow的上下文
touch /.autorelabel 重建卷标
exit reboot

rhel7grub的修复
通过光盘引导
chroot /mnt/sysimage
grub2-install /dev/sda
不会自动打上grub.cfg  没有时需命令生成。

rhel7内核等引导文件的修复
通过光盘引导
chroot /mnt/sysmimage
cd /
mount /dev/cdrom /media  挂载光盘到media目录中
rpm -ivh --force  ken***************(加V是为了看到进度条)
安装完内核，会自动打上虚拟文件系统
grub2-install /dev/sda 安装成功会在/boot目录下生成grub所需要的文件，但是缺少grub.cfg配置文件
grub2-mkconfig -o /boot/grub2/grub.cfg   生成cfg文件

添加grub加密
在/etc/grub.d/00.header的末尾添加：
cat <<EOF
set 

ifconfig查看ip
cd /etc/sysconfig/network-scripts/ifcfg
[root@debin]


gedit ifcfg-eth0 
字母必须是大写
ONBOOT=on  开机即启动网卡
NM_CONTROLLED=yes 启动守护进程 ，桌面右上角的小电脑标识符
service network restart 网络重启（centos6）
chkconfig NetworkManager off  
关闭NetworkManager服务，防止冲突 
systemctl restart network(rhel7网络重启)


硬件检测
cat /proc/cpuinfo
lspci 查看所有的板卡信息
lspci |grep net 通过管道开过滤出要查看的信息
cat /proc/meminfo  查看内存信息
lsusb 查看所有usb设备 cat /proc/bus/usb/devices
cat /proc/bus/input/devices 查看输入设备
fdisk -l 查看硬盘信息
df -hT查看硬盘使用情况   T是查看类型
uname -a         cat /proc/version(后者较详细)
lsb_release -a   查看系统发布的完整信息
lsblk 列出系统中的所有块设备的信息  RM 1为可移动 0相反。RO 0可读可写
cat /proc/interrupts 查看设备中所有的IRQ信号  irq的值越小 优先级越高
dmidecode -t bios
查看bios信息
pstree -p |grep udev 查看udev这个daemons(守护进程)自动生成设备的名称和定义设备如何使用
它在/etc/rc.d/rc.sysinit脚本运行后工作
/etc/udev/rule
pstree -p |grep hal
这个deamon是实现程序和设备之间交流的，告诉程序如何使用设备。

pkgs.org


4、添加grub加密
在/etc/grub.d/00_header 的末尾添加如下内容：
cat  << EOF
set superusers="tom"
password tom  redhat
EOF
最后执行更新grub.cfg操作
grub2-mkconfig -o /boot/grub2/grub.cfg

5、网络基本配置
[root@centos6 桌面]# cd /etc/sysconfig/network-scripts/ifcfg*
BOOTPROTO=static
IPADDR=192.168.24.44
NETMASK=255.255.255.0
GATEWAY=192.168.24.254
DNS1=192.168.24.254
[root@centos6 network-scripts]# service network restart
重启网络服务
[root@centos6 network-scripts]# service NetworkManager stop
[root@centos6 network-scripts]# chkconfig NetworkManager off
关闭NetworkManager服务，防止冲突
注：配置文件的每一个修改，要想生效都必须重启服务

6、硬件检测
[root@centos6 桌面]# cat /proc/cpuinfo 
查看cpu信息
[root@centos6 ~]# lspci
查看所有的板卡信息
[root@centos6 ~]# lspci |grep net
通过管道过滤net方面的内容
[root@centos6 ~]# cat /proc/meminfo 
查看内存的信息
[root@centos6 ~]# lsusb
查看usb的设备
[root@centos6 ~]# cat /proc/bus/usb/devices 
查看usb的设备信息
[root@centos6 ~]# cat /proc/bus/input/devices 
查看输入设备的信息
[root@centos6 ~]# fdisk -l
查看硬盘信息
[root@centos6 桌面]# df -hT
查看硬盘的使用情况
[root@centos6 桌面]# uname -a
查看系统的信息
[root@centos6 桌面]# cat /proc/version 
查看系统版本信息
[root@centos6 桌面]# lsb_release  -a
查看系统的发布信息
注：lsb是linux的一个核心标准
[root@centos6 ~]# lsblk
列出系统中的所有块设备信息
[root@centos6 ~]# cat /proc/interrupts 
查看设备中所有的IRQ信号，irq值越小优先级越高
[root@centos6 ~]# dmidecode -t bios
查看bios信息
[root@centos6 ~]# pstree -p |grep udev
查看udev这个daemons（守护进程），自动生成设备的名称和定义设备如何使用，它在/etc/rc.d/rc.sysinit脚本运行后开始工作。
etc/udev/rules.d这个目录下存放了系统的规则文件
[root@centos6 rules.d]# pstree -p |grep hal
这个daemon是实现程序和设备之间交流的，告诉程序如何使用设备

7、软件安装
debain： /etc/apt/source.list
sudo apt-get update  更新源
sudo apt-get upgrade  更新系统
sudo apt-get autoremove  自动删除一些不是用的软件包

a、源码编译安装
优点：定制性高
缺点：耗时长
./configure  定制环境
make   编译
make install   安装

b、rpm包安装  (debain:dkpg)
优点：简单方便
缺点：功能无法定制，存在包依赖
rpm -qa 查看系统中所有的rpm软件包 >>>>>> rpm -qa | grep kernel 过滤出关于内核的信息
rpm -qc **** 查看这个文件的配置文件位置
rpm -qd *****  查看这个文件的帮助信息
rpm -qf /**/**/xxx  查看xxx是由什么文件产生的 逆向找出软件包
rpm -ql *** 查看系统中的***软件包的安装到哪去 安装路径
rpm -qlp ***** 在安装前查看****安装后的路径
rpm -Uvh **  U的作用，系统会查看是否有这个包，没有就安装，有就卸载再安装当前版本。升级内核不推荐！！!
rpm -e *** 卸载***


c、yum安装
优点：尽可能解决包依赖，方便
缺点：存在版本依赖
yum (-y)install ****安装*****不加y 可以看见依赖包等
yum list |grep tree  yum list  列出源里面所有的软件包，|grep tree  筛选出包含tree的文件
yum  clean all        yum makecache(此步骤不做的情况下，系统会在初次使用建立索引，比较耗时间)
yum search *****     检索****语句   只要有关***的会被全部列出来
yum  remove  ***   （-y）建议不加y
yum whatprovides rz  找rz由**提供
yum grouplist ******  进行组件的安装


d、dnf安装
epel源 针对企业使用的源包

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  3/12   >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
putty  secureCRT   Xmanger  
yum install  lrzsz  lrzsz只能在终端使用  rz上传  sz下载
yum install bash-completion-extras   完成tab命令 （最小化安装）
yum install net-tool   安装基本网络指令集


dr-xr-xr-x. 2          root       root         4096        2月  28 04:14      bin
权限	  硬链接	文件所有者 文件所属组	文件大小  文件的修改或创建日期  文件名
-rw--------   dr-xr-xr-x
第一位表示文件类型   
-表示文件  
d表示目录 
b表示块设备文件（存储）
c表示字符型设备文件（通常是鼠标等无法存储的设备）
l表示链接文件（软链接）
p管道文件 进程和进程之间通讯 ，建立连接所产生的文件
s本地套接字文件 通过网络不通过进程进行连接的文件

r e x 读 写 执行
第一段的三位表示文件的所有者的权限 u
第二段的三位表示文件的所属组的权限 g
第三段的三位表示文件的其他人的权限 o
所有                               a
修改权限的指令
chmod {u|g|o}（可以三两配对） {+|-|=} {r|w|x|}（可以三两配对）
chmod u+w，g+r,o-r  文件名
rwx  421  
chmod（-R） 444 文件名  递归修改 会修改文件夹下所有的文件夹和文件
删除属于w权限
chown改变所有者
chown tom 文件名
chgrp jerry 
chown  tom:tom 文件名    前一个是用户 后一个是组   ：.都可以用
读前要能写 
x对于文件是否具有执行权限，指运行脚本或者程序
x对于目录是否能够cd进去
目录中含有root的文件或者目录   即使递归删除 ，也无法删除root的文件或者目录（空目录是可以删除）   但可以删除其他普通用户的文件或者目录

绝对路径 相对目录
cd - 返回上一次的目录
.当前目录 .. 上一级目录
cp /boot/grub/grub.cfg  .   复制grub.cfg到当前文件夹
cd ~tom/   ~tom表示一个~tom文件夹     cd ~/tom 表示进当前用户的home下的tom

rm删除文件，rmdir删除空目录

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>3.17>>>>>>>>>>>>>>>>>>>>>>>>>
cp -p   复制文件时将文件的属性一同复制
cp -rf  可以拷贝深目录
cat只能保存一个屏幕的内容，一般是文件的结尾，不适合查看大文件 -n 行号 cat记录空白行
nl 忽略空白行  相似cat	
more space屏翻 enter行翻  不可以回翻  可以搜索  shitf+N  shift+n  上下检索刚刚搜索的内容  less 可以回翻  
tail -5 xxxxx  查看xxx最后5行的内容  适合查看日志
atime 访问时间   ctime 
文件的 Access time，atime 是在读取文件或者执行文件时更改的。
文件的 Modified time，mtime 是在写入文件时随文件内容的更改而更改的。
文件的 Create time，ctime 是在写入文件、更改所有者、权限或链接设置时随 Inode 的内容更改而更改的

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>3.19>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
umask
umask -S 查看保留的权限
root默认0002
普通用户0022
lsattr  
chattr +选项  目标文件  隐藏属性 
+a  目录中的内容只能添加不能删除
+A 不能修改文件的访问时间
i 针对文件只读，不能执行任何属性的修改和文件内容的修改。
  针对目录，不可以删除和创建内容在目录中
suid sgid sbit   http://onlyzq.blog.51cto.com/1228/527247/
tmp目录为sbit  在tmp目录下普通用户可以删除自己文件夹内的root的非空文件或文件夹

文件查找
locate     updatedb 遍历所有文件
find /(从根目录开始) -name  +(文件名称) -iname i忽略大小写


umask  文件权限过滤符
umask的值由4位数构成，最后三位分别表示ugo
文件                目录
6    6    6       7   7    7
rw-  rw-  rw-    rwx  rwx  rwx
              0022
rw-  r--  r--    rwx  r-x  r-x
6     4   4       7   5    5
              0333
4    4    4       4   4    4

隐藏属性  chattr  +选项  目标文件或目录
只能使用unix/linux类的文件系统，不支持vfat文件系统
a  目录中的内容只能添加不能删除
A  不能修改文件的访问时间
i  针对文件只读，不能执行任何属性的修改和文件内容的修改。针对目录，不可以删除和创建内容在目录中。
S  立即执行同步写操作，不缓存数据的
u  保证备份进行数据恢复的（未成功）

[root@centos6 test]# ll /usr/bin/passwd   查看passwd命令权限
在u的位置的执行权限不是x，而是s，这个就是suid
当一个文件被设置了suid，那么所有用户在执行这个文件时就具备了和这个文件的所有者同等的权限。这个权限通常只是针对文件设置。针对文件

[root@centos6 /]# chmod g+s test/  设置目录为sgid
目录被设置SGID后，任何人再这个目录中建立的文件，都属于这个目录本身所属组。针对目录

SBIT：在设置了sbit的目录中，只有文件的所有者或者是目录的所有者以及root可以删除
[root@centos6 /]# chmod o+t test/
设置test目录为sbit权限

umask的第一位就是过来suid（4），sgid（2）和sbit（1）权限的。
[root@centos6 /]# chmod 2777 /test/
这个表示给test目录添加sgid

注：如果在文件或者目录设置了suid等相关权限后出现的是大写的S或者T，表示本身这个目录或者文件没有执行x权限

文件查找 find 
[root@centos6 tmp]# find /home -print 
通过find查找家目录下的所有文件并打印出来。
[root@centos6 /]# find / -name shadow 
查找匹配的文件，-name表示文件名称，-iname表示忽略大小写。
[root@centos6 tmp]# find . -type d 
参数-type表示文件类型：
l  链接文件
d  目录
f  普通文件
c  字符文件
p  管道文件
s  套接字文件

-maxdepth  目录的最大深度，表示最多检索多少层目录
-mindepth  目录的最小深度，表示必须要从多少层开始检索

[root@centos6 tmp]# find /  -maxdepth 2 -type f -name 6.pdf  
多个参数叠加搜索，要注意检索时的参数顺序

根据时间戳查找：
访问时间（atime）（amin）
修改时间（ctime）（cmin）
变化时间（mtime）（mmin）
[root@centos6 tmp]# find . -type f -atime +2 
表示查找当前目录下的2天以前被访问过的普通文件。-2表示2天以内的文件。2表示正好2天。
[root@centos6 tmp]# find . -type d -amin -5
[root@centos6 tmp]# find . -type f -newer test1
根据test1文件的时间戳列出比它更新的普通文件
[root@centos6 tmp]# find . -size +10 
查找出当前目录下所有大于10K的文件，如果是大于10M，需要指明+10M
[root@centos6 tmp]# find . -size +90M -size -110M  指定大小范围检索
[root@centos6 tmp]# find . -user tom -group root  根据用户名和组查找
[root@centos6 tmp]# find . -iname \*.mp4 -delete
查找出所有的mp4后缀的文件并删除
[root@centos6 tmp]# find . -type f  -perm 777
查找文件权限为777的普通文件
[root@centos6 tmp]# find . -type f -perm -111
查找普通文件中ugo三组中必须都有执行x权限的文件。-表示和。+表示或
[root@centos6 tmp]# find . -type f -user tom  -exec chown root {} \;
参数-exec是find工具中最强大的一个匹配选项，可以在检索完成后执行特定动作和指令。{}用来将检索后的内容匹配到命令中去。
上面的意思整体就是查找属于tom 用户的所有普通文件，然后将所有文件的所有者改为root。

文件系统：ext4（日志式文件系统），xfs，ntfs，fat32，tmpfs，proc
文件系统是对一个存储设备上的元数据和数据进行组织管理的机制，可以简单理解为是告诉底层和上层如何去读取、存储数据

日志式文件系统是类unix/Linux特有的，它会在启动时系统中生成一个journal。

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>3.26>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>4
screen -x xxx   终端共享
du -hs *** 查看单独文件的大小
软链接   快捷方式（符号链接）
硬链接 类unix特有  不占用块空间和inode空间，不能够跨分区  （便于数据备份）
复制   产生一个全新的文件，生成新的inode,占用块空间
移动   同一个分区下，不占用块空间，只是重新定义inode。不同分区下，重新调整块和inode空间

磁盘分区：MBR,GPT
fdisk -l 查看硬盘信息

软链接: 快捷方式，不占用块空间，但是占用inode空间，而且它的存在依赖于它的链接文件。
硬链接：  类unix中特有的，可以用来备份重要文件，并且不占用inode，不占用块空间，但是不能跨分区
复制：产生一个全新的文件，生成新的inode，占用块
移动：同一个分区下，不占用块空间，只是重新定义inode。不同分区下，会重新调整inode和块空间。

磁盘分区：MBR和GPT
fdisk  -l  查看当前的硬盘分区参数
[root@centos6 ~]# fdisk /dev/sdb
针对sdb硬盘进行分区操作
   d   delete a partition
删除一个分区
  l   list known partition types
显示已知的分区类型
   t   change a partition's system id
改变分区的系统编号，编号通过l获取
   n   add a new partition
添加一个新分区
   p   print the partition table
显示分区表
   q   quit without saving changes
不保存退出
   w   write table to disk and exit
保存并退出
  
分区完成后，硬盘需要进行文件系统定义和挂载才能使用。
[root@centos6 ~]# mkfs.ext4 /dev/sdb5
格式化磁盘，文件系统定义为ext4
[root@centos6 ~]# mount /dev/sdb5 dir/
将硬盘sdb5挂载到dir目录下

[root@centos6 ~]# mount -o remount,ro /dev/sdb5  
重新挂载sdb5并定义为只读，还可以定义rw，noexec（不能执行）

[root@centos6 dir]# fuser -mv /dev/sdb5
对于卸载时进程的占用，可以通过上面的指令查看是谁占用了挂载的硬件，然后可以通过kill等指令干掉对方。

[root@centos6 ~]# fsck.ext4 -fc /dev/sdb5
进程强制自检并显示过程

gpt分区：parted
[root@centos6 ~]# parted /dev/sdb
使用parted工具对sdb进行gpt分区
mklabel  创建分区表，指明gpt
mkpart   创建分区 
在挂载前通过ls -l /dev/disk/by-uuid/ 来查看硬盘的uuid  通过uuid号挂载
[root@centos6 ~]# gedit /etc/fstab 
这个文件是用来实现自动挂载

swap  类似于windows中的虚拟内存的概念
个人计算机 休眠 hibernate swap分区大小必须至少和内存大小一样
服务器 oracle 等应用对swap有特定要求，不创建无法安装数据库

swap划分除了安装系统过程中定义以外，在系统安装好后也可以后期再生成。有二种方式：
一种是基于新的磁盘，一种是基于文件。
[root@centos6 ~]# mkswap /dev/sdb1
用swap格式来格式化文件系统
[root@centos6 ~]# swapon  /dev/sdb1
激活swap分区，如果需要关闭swap分区，使用swapoff 
最后写入fstab中实现自动挂载

第二种方式通过生成空文件来实现swap挂载
[root@centos6 ~]#dd if=/dev/zero of=fileswap bs=1M count=100
[root@centos6 ~]# mkswap fileswap
[root@centos6 ~]# swapon  fileswap
最后也可以写入到fstab中

数据恢复
http://codebay.cn/post/1977.html?1490402903150 

lsof
系统进程会在后台为所有的文件提供一个文件描述符
[root@centos6 ~]# lsof | less
COMMAND     PID      USER   FD      TYPE             DEVICE  SIZE/OFF       NODE NAME
FD 文件描述符  
cwd 当前的应用程序在哪个目录下工作
txt 可以执行的文件，比如二进制代码程序
mem 内存中调用的文件
0u  这个是文件打开后返回的一个整数值，u表示可以读写，r表只读，w可以写
type表示类型，dir（目录） reg（文件）
clk（字符文件）blk（块设备文件）
node 表示inode值
[root@centos6 tmp]#lsof /var/log/messages    查看系统中被进程占用的这个文件的信息
[root@centos6 tmp]# lsof |grep delete --color
查找最近被删除过的文件，前提是系统没有重启
根据文件描述符，找到/proc/进程号/fd/对应的文件描述符进行恢复
[root@centos6 tmp]#cat 4 > /var/log/messages

使用软件恢复
debugfs
r—linux
foremost：支持的文件系统类型很多，但有些特定格式的文件不支持
extundelete：支持ext文件系统。不能够实现同一个分区下的数据恢复


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>3.28>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
root可以修改无w权限的文件
普通用户可以修改自己的文件（无w权限也可以）
开启兼容模式 vim会模拟vi的行为   建议关闭兼容模式
2017/3/28  vim
vim  编辑器之神 1991    vi 1976
emacs 神的编辑器    1975
文本文档  notepad++

IDE  集成开发环境

命令模式    esc返回到命令模式
i  进入插入模式，光标维持不动
I  进入插入模式，光标会停留在行首
a  进入插入模式，将光标后移一格
A  进入插入模式，光标移动到行尾
o  进入插入模式，向下新建一行开始
O  进入插入模式，向上新建一行开始
u  回退，对修改的返回
ctrl+r 前进
插入模式
末行模式 “：”保存、退出、定位、查询、修改
注：在任何模式下如果希望进行模式间的切换，都必须先返回到命令行模式，所以esc很有用

:q!  在vim中这个表示强制退出
:wq 保存并退出
:X  加密
:x  写入退出
末行模式下的内容替换
:s/lp/lg/   在当前行找到lp并替换为lg
:s/lp/lg/g  最后的g表示全局，这里的全局是指的当前行
:/XX  表示搜索文档中包含xx的内容。搜索出的内容会高亮显示，按n可以在所有内容中逐个向下查看，N向上查看
:6s/bin/Linux/g     6s表示修改第六行
:.,$s/bin/llll/g   .表示当前行，$表示最后一行
:%s/bin/xxx/    %表示全局替换                         
:%s/^#//g   ^表示开头，这里的理解是将整个文档开头带#的内容全部删除。（最后2个/没有空格，所以是删除）

命令行模式下的定位：  n（数字） G
gg  回到第一行
G   回到最后一行
复制 yy
黏贴 p
10yy  表示复制10行
剪切  dd  删除
r（紧跟你希望的字符）  替换一个字符
x  删除一个字符

M 光标移动到屏幕中央的行的第一个字符
H 光标移动到当前屏幕第一行的第一个字符
L 光标移动到屏幕最后一行的第一个字符
0 数字0直接到光标所在行的第一个字符
$ 到光标所在行的最后一个字符

块选择 ctrl+v
分屏 :sp
ctrl+w 上下箭头，切换（建议ctrl w w）

多文档编辑  vim file1 file2  
:next  进入下一个文档
:N   返回上一个文档
:files  查看当前所有打开的文档
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>3.30>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
smartcase
  










